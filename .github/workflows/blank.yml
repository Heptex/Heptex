name: Build CROM

on:
  workflow_dispatch:
    inputs:
      device_tree:
        description: "Device tree link"
        required: true
        default: ""
      rom_repo:
        description: "ROM repository link (with manifest)"
        required: true
        default: ""

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Install prerequisites
      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev \
                                  gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev \
                                  libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig \
                                  repo python3 python3-pip
          pip3 install --user -U ccache
          echo 'export PATH=$PATH:~/.local/bin' >> ~/.bashrc
          source ~/.bashrc
          echo "Installed prerequisites"

      # Step 2: Initialize the ROM repository and sync
      - name: Initialize ROM repository
        run: |
          mkdir -p $HOME/crom
          cd $HOME/crom
          git clone "${{ github.event.inputs.rom_repo }}" rom-source
          cd rom-source
          repo init -u . -b main
          repo sync --force-sync --no-clone-bundle --current-branch --jobs=$(nproc)
        shell: bash

      # Step 3: Clone the device tree
      - name: Clone device tree
        run: |
          cd $HOME/crom/rom-source
          git clone "${{ github.event.inputs.device_tree }}" device-tree
        shell: bash

      # Step 4: Build the ROM
      - name: Build CROM
        run: |
          cd $HOME/crom/rom-source
          source build/envsetup.sh
          lunch crom_device-userdebug
          make bacon -j$(nproc)
        shell: bash

      # Step 5: Upload the build artifacts
      - name: Upload ROM
        uses: actions/upload-artifact@v3
        with:
          name: crom-build
          path: $HOME/crom/rom-source/out/target/product/*
